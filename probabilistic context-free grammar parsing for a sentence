import nltk
from nltk import PCFG
from nltk.parse import ViterbiParser

# Define a Probabilistic CFG
pcfg_grammar = PCFG.fromstring("""
  S -> NP VP [1.0]
  NP -> Det N [0.6] | NP PP [0.4]
  VP -> V NP [0.5] | VP PP [0.5]
  PP -> P NP [1.0]
  Det -> 'the' [0.8] | 'a' [0.2]
  N -> 'dog' [0.5] | 'cat' [0.3] | 'telescope' [0.2]
  V -> 'saw' [1.0]
  P -> 'with' [1.0]
""")

# Create the parser using the Viterbi algorithm
parser = ViterbiParser(pcfg_grammar)

# Input sentence to parse
sentence = "the dog saw a cat with the telescope"
tokens = nltk.word_tokenize(sentence)

# Parse the sentence and show the most probable parse tree
print("Most probable parse tree:\n")
for tree in parser.parse(tokens):
    print(tree)
    tree.pretty_print()
    break  # Only show the most probable one
